"""
author: Antonio Marino
tools: ChatGPT
Summary: The below program is a python implementation of Tic Tac Toe
using the graphics package created by John Zelle. The majority of
the code was generated by using OpenAI's ChatGPT, which can be
accessed at https://chat.openai.com/chat. However, some bug fixes
were done by hand.
"""
from graphics import *

class TicTacToe:
    def __init__(self):
        self.win = GraphWin("Tic Tac Toe", 300, 300)
        self.board = [[0, 0, 0] for i in range(3)]
        self.turn = "X"
        self.winner = None

        # draw the board
        for i in range(3):
            for j in range(3):
                rect = Rectangle(Point(i*100, j*100), Point((i+1)*100, (j+1)*100))
                rect.draw(self.win)

    def play(self):
        while self.winner is None:
            # get mouse click from player
            p = self.win.getMouse()
            x = int(p.getX() // 100)
            y = int(p.getY() // 100)

            # make sure the space is empty
            if self.board[x][y] == 0:
                self.board[x][y] = self.turn
                self.draw_piece(x, y)
                self.check_winner()
                self.turn = "O" if self.turn == "X" else "X"
            else:
                print("That space is already taken!")

        # display the winner
        if self.winner == "X":
            print("X wins!")
        elif self.winner == "O":
            print("O wins!")
        else:
            print("It's a tie!")

    def draw_piece(self, x, y):
        # draw the piece on the board
        center = Point(x*100 + 50, y*100 + 50)
        piece = Text(center, self.turn)
        piece.draw(self.win)

    def check_winner(self):
        # check rows
        for row in self.board:
            if row[0] == row[1] == row[2] and row[0] != 0:
                self.winner = row[0]

        # check columns
        for col in range(3):
            if self.board[0][col] == self.board[1][col] == self.board[2][col] and self.board[0][col] != 0:
                self.winner = self.board[0][col]

        # check diagonals
        if self.board[0][0] == self.board[1][1] == self.board[2][2] and self.board[0][0] != 0:
            self.winner = self.board[0][0]
        if self.board[0][2] == self.board[1][1] == self.board[2][0] and self.board[0][2] != 0:
            self.winner = self.board[0][2]


game = TicTacToe()
game.play()
